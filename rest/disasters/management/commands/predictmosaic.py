'''
Created on Oct 18, 2017

@author: agutierrez
'''
import time

from django.core.management.base import BaseCommand
from networkx.algorithms.bipartite import projection
import numpy
from pyproj import transform, Proj
import rasterio

from rest.disasters.util import non_max_suppression_fast
from rest.disasters.util.geo import crop, get_box_center, pretty_print, \
    pixel_to_world


class Command(BaseCommand):

    def add_arguments(self, parser):
        parser.add_argument('--path', help='path to the new model')

    def handle(self, *args, **options):
        filepath = options['path']
        
        with rasterio.open(filepath) as src:
            geotransform = src.transform
        
        
        boxes = numpy.array([[ 13511,      0,  13810,    299],
                 [ 15801,    229,  16100,    528],
                 [ 11679,    458,  11978,    757],
                 [ 16946,    458,  17245,    757],
                 [ 15801,    916,  16100,   1215],
                 [ 16717,    916,  17016,   1215],
                 [  5725,   1145,   6024,   1444],
                 [ 17633,   1145,  17932,   1444],
                 [ 15801,   1374,  16100,   1673],
                 [ 11221,   1832,  11520,   2131],
                 [ 19694,   1832,  19993,   2131],
                 [ 14198,   2519,  14497,   2818],
                 [ 16717,   2519,  17016,   2818],
                 [ 16717,   2748,  17016,   3047],
                 [  4809,   2977,   5108,   3276],
                 [  8244,   2977,   8543,   3276],
                 [  6412,   3206,   6711,   3505],
                 [  8473,   3206,   8772,   3505],
                 [ 16946,   3206,  17245,   3505],
                 [ 19923,   3206,  20222,   3505],
                 [ 14198,   3435,  14497,   3734],
                 [ 11221,   3664,  11520,   3963],
                 [ 13740,   3664,  14039,   3963],
                 [ 13969,   3664,  14268,   3963],
                 [ 15343,   3664,  15642,   3963],
                 [ 15572,   3664,  15871,   3963],
                 [ 17862,   3664,  18161,   3963],
                 [  5725,   3893,   6024,   4192],
                 [  8015,   3893,   8314,   4192],
                 [ 13740,   3893,  14039,   4192],
                 [ 13969,   3893,  14268,   4192],
                 [ 14885,   3893,  15184,   4192],
                 [ 17862,   3893,  18161,   4192],
                 [ 13740,   4122,  14039,   4421],
                 [  9160,   4580,   9459,   4879],
                 [ 15114,   4580,  15413,   4879],
                 [  1374,   4809,   1673,   5108],
                 [  8931,   5267,   9230,   5566],
                 [ 14198,   5267,  14497,   5566],
                 [  8015,   5725,   8314,   6024],
                 [ 14427,   5725,  14726,   6024],
                 [ 16717,   5725,  17016,   6024],
                 [ 18320,   5725,  18619,   6024],
                 [  6870,   5954,   7169,   6253],
                 [ 13969,   5954,  14268,   6253],
                 [ 15572,   5954,  15871,   6253],
                 [  7786,   6183,   8085,   6482],
                 [  9160,   6183,   9459,   6482],
                 [ 10992,   6183,  11291,   6482],
                 [ 11221,   6183,  11520,   6482],
                 [ 11908,   6183,  12207,   6482],
                 [ 12366,   6183,  12665,   6482],
                 [ 16488,   6183,  16787,   6482],
                 [ 12366,   6412,  12665,   6711],
                 [ 12595,   6412,  12894,   6711],
                 [ 16030,   6412,  16329,   6711],
                 [ 16259,   6412,  16558,   6711],
                 [ 10763,   6641,  11062,   6940],
                 [ 12366,   6641,  12665,   6940],
                 [ 16259,   6641,  16558,   6940],
                 [ 22442,   6641,  22741,   6940],
                 [ 12366,   6870,  12665,   7169],
                 [ 12824,   6870,  13123,   7169],
                 [  5267,   7328,   5566,   7627],
                 [  9618,   7328,   9917,   7627],
                 [  9847,   7328,  10146,   7627],
                 [ 12137,   7328,  12436,   7627],
                 [  9160,   7557,   9459,   7856],
                 [ 14198,   7557,  14497,   7856],
                 [  9618,   7786,   9917,   8085],
                 [ 16030,   8015,  16329,   8314],
                 [ 16259,   8015,  16558,   8314],
                 [ 16488,   8015,  16787,   8314],
                 [ 16717,   8015,  17016,   8314],
                 [ 10763,   8244,  11062,   8543],
                 [ 11221,   8244,  11520,   8543],
                 [ 12595,   8244,  12894,   8543],
                 [ 16717,   8244,  17016,   8543],
                 [ 12595,   8473,  12894,   8772],
                 [ 12824,   8702,  13123,   9001],
                 [ 13511,   8702,  13810,   9001],
                 [ 16259,   8702,  16558,   9001],
                 [ 16717,   8702,  17016,   9001],
                 [ 10076,   9160,  10375,   9459],
                 [ 10305,   9160,  10604,   9459],
                 [ 10763,   9160,  11062,   9459],
                 [ 10305,   9389,  10604,   9688],
                 [ 21297,   9847,  21596,  10146],
                 [  4809,  10076,   5108,  10375],
                 [  7557,  10076,   7856,  10375],
                 [ 14198,  10076,  14497,  10375],
                 [ 21526,  10076,  21825,  10375],
                 [  9618,  10305,   9917,  10604],
                 [ 13969,  10305,  14268,  10604],
                 [ 11908,  10534,  12207,  10833],
                 [ 18778,  10534,  19077,  10833],
                 [ 23358,  10534,  23657,  10833],
                 [ 12824,  10763,  13123,  11062],
                 [ 15801,  10763,  16100,  11062],
                 [ 18778,  10992,  19077,  11291],
                 [ 21755,  10992,  22054,  11291],
                 [ 13740,  11221,  14039,  11520],
                 [ 13969,  11221,  14268,  11520],
                 [ 21755,  11221,  22054,  11520],
                 [ 13969,  11679,  14268,  11978],
                 [ 14198,  11679,  14497,  11978],
                 [ 10763,  11908,  11062,  12207],
                 [ 18320,  11908,  18619,  12207],
                 [  9618,  12137,   9917,  12436],
                 [ 11221,  12137,  11520,  12436],
                 [ 15114,  12137,  15413,  12436],
                 [ 15801,  12137,  16100,  12436],
                 [ 16030,  12137,  16329,  12436],
                 [ 10992,  12366,  11291,  12665],
                 [ 11450,  12595,  11749,  12894],
                 [ 18091,  12824,  18390,  13123],
                 [  6870,  13053,   7169,  13352],
                 [  9847,  13053,  10146,  13352],
                 [ 17633,  13053,  17932,  13352],
                 [ 17862,  13053,  18161,  13352],
                 [ 21984,  13740,  22283,  14039],
                 [ 19007,  13969,  19306,  14268],
                 [ 19236,  13969,  19535,  14268],
                 [ 19236,  14198,  19535,  14497],
                 [ 15343,  14427,  15642,  14726],
                 [ 20152,  14427,  20451,  14726],
                 [  1603,  14656,   1902,  14955],
                 [  1603,  14885,   1902,  15184],
                 [ 16717,  14885,  17016,  15184],
                 [ 16030,  15114,  16329,  15413],
                 [ 19236,  15343,  19535,  15642],
                 [ 23587,  15572,  23886,  15871],
                 [ 16717,  16259,  17016,  16558],
                 [ 17633,  16259,  17932,  16558],
                 [ 17862,  16259,  18161,  16558],
                 [ 14427,  16488,  14726,  16787],
                 [ 17633,  16488,  17932,  16787],
                 [ 13969,  17175,  14268,  17474],
                 [  3664,  17404,   3963,  17703],
                 [ 17633,  17404,  17932,  17703],
                 [ 14656,  18320,  14955,  18619],
                 [ 16030,  20839,  16329,  21138],
                 [ 19923,  22213,  20222,  22512],
                 [ 20152,  24732,  20451,  25031],
                 [ 20610,  24732,  20909,  25031],
                 [ 20839,  24732,  21138,  25031],
                 [ 16717,  24961,  17016,  25260],
                 [ 22671,  26106,  22970,  26405],
                 [ 19007,  29312,  19306,  29611]]  )  
        
        
        start_time = time.time()
        
        
        
        
        no_overlap_boxes = non_max_suppression_fast(numpy.array(boxes), .1)
        inProj = Proj(init='epsg:32615')
        outProj = Proj(init='epsg:4326')        
        for box in no_overlap_boxes:
            point = get_box_center(box)
            point_world = pixel_to_world(point[0], point[1], geotransform)
            pretty_print(transform(inProj, outProj, point_world[0], point_world[1]))
        
        #crop(filepath, 0, 0, 299, 299)
        
        print 'Command execution is done in %s seconds.' % (time.time() - start_time)