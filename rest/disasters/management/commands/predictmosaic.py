'''
Created on Oct 18, 2017

@author: agutierrez
'''
import time

from django.core.management.base import BaseCommand
from networkx.algorithms.bipartite import projection
import numpy
from pyproj import transform, Proj
import rasterio

from rest.disasters.util import non_max_suppression_fast
from rest.disasters.util.geo import crop, get_box_center, pretty_print, \
    pixel_to_world, list_to_shape


class Command(BaseCommand):

    def add_arguments(self, parser):
        parser.add_argument('--path', help='path to the new model')

    def handle(self, *args, **options):
        filepath = options['path']
        start_time = time.time()
        
        with rasterio.open(filepath) as src:
            geotransform = src.transform
        
        
        boxes = numpy.array([[ 18091,    458,  18390,    757],
                 [ 18320,    458,  18619,    757],
                 [ 17175,    916,  17474,   1215],
                 [ 14198,   1145,  14497,   1444],
                 [ 16259,   1145,  16558,   1444],
                 [ 16717,   1145,  17016,   1444],
                 [ 16946,   1145,  17245,   1444],
                 [ 17175,   1145,  17474,   1444],
                 [ 16717,   1374,  17016,   1673],
                 [ 11679,   1603,  11978,   1902],
                 [ 13053,   1603,  13352,   1902],
                 [ 14656,   1603,  14955,   1902],
                 [ 16717,   1603,  17016,   1902],
                 [ 12824,   1832,  13123,   2131],
                 [ 13053,   1832,  13352,   2131],
                 [ 18091,   1832,  18390,   2131],
                 [ 16946,   2290,  17245,   2589],
                 [ 19236,   2290,  19535,   2589],
                 [ 13969,   2977,  14268,   3276],
                 [ 13053,   3435,  13352,   3734],
                 [ 16488,   3435,  16787,   3734],
                 [ 17175,   3435,  17474,   3734],
                 [ 13969,   3664,  14268,   3963],
                 [ 16259,   3664,  16558,   3963],
                 [ 17175,   3664,  17474,   3963],
                 [ 17404,   3664,  17703,   3963],
                 [ 17633,   3664,  17932,   3963],
                 [ 15343,   4122,  15642,   4421],
                 [ 15801,   4580,  16100,   4879],
                 [ 11908,   5496,  12207,   5795],
                 [ 13511,   5496,  13810,   5795],
                 [ 15801,   5496,  16100,   5795],
                 [ 16259,   5496,  16558,   5795],
                 [ 17175,   5496,  17474,   5795],
                 [ 18549,   5954,  18848,   6253],
                 [ 18549,   6183,  18848,   6482],
                 [ 14198,   6412,  14497,   6711],
                 [ 12595,   7328,  12894,   7627],
                 [ 10534,   7557,  10833,   7856],
                 [ 17862,   7557,  18161,   7856],
                 [ 11450,   7786,  11749,   8085],
                 [ 12824,   8702,  13123,   9001],
                 [ 18091,   8702,  18390,   9001],
                 [ 18320,   8702,  18619,   9001],
                 [ 12824,   8931,  13123,   9230],
                 [ 18091,   8931,  18390,   9230],
                 [ 11221,   9160,  11520,   9459],
                 [ 13511,   9389,  13810,   9688],
                 [ 17862,   9389,  18161,   9688],
                 [ 12595,   9618,  12894,   9917],
                 [ 13511,   9618,  13810,   9917],
                 [ 13511,   9847,  13810,  10146],
                 [ 10305,  10076,  10604,  10375],
                 [ 15572,  10076,  15871,  10375],
                 [ 15801,  10076,  16100,  10375],
                 [ 10992,  10534,  11291,  10833],
                 [ 10076,  10763,  10375,  11062],
                 [ 10305,  10992,  10604,  11291],
                 [ 11679,  10992,  11978,  11291],
                 [ 13511,  10992,  13810,  11291],
                 [ 15343,  10992,  15642,  11291],
                 [ 15114,  11221,  15413,  11520],
                 [ 17175,  11221,  17474,  11520],
                 [ 16717,  11450,  17016,  11749],
                 [ 17175,  11450,  17474,  11749],
                 [ 10076,  11908,  10375,  12207],
                 [ 11450,  11908,  11749,  12207],
                 [ 14656,  11908,  14955,  12207],
                 [ 14885,  11908,  15184,  12207],
                 [ 11450,  12137,  11749,  12436],
                 [ 15572,  12137,  15871,  12436],
                 [ 16717,  12366,  17016,  12665],
                 [ 18549,  12366,  18848,  12665],
                 [ 14198,  12595,  14497,  12894],
                 [ 14885,  12595,  15184,  12894],
                 [ 15114,  12595,  15413,  12894],
                 [ 15343,  12595,  15642,  12894],
                 [ 10763,  12824,  11062,  13123],
                 [ 16946,  13053,  17245,  13352],
                 [ 16946,  13282,  17245,  13581],
                 [ 17175,  13282,  17474,  13581],
                 [ 17175,  13511,  17474,  13810],
                 [ 18091,  13511,  18390,  13810],
                 [ 18549,  13511,  18848,  13810],
                 [  5267,  13740,   5566,  14039],
                 [ 13740,  13740,  14039,  14039],
                 [ 13969,  13740,  14268,  14039],
                 [ 14198,  13740,  14497,  14039],
                 [ 17862,  13740,  18161,  14039],
                 [ 18549,  13740,  18848,  14039],
                 [ 18091,  13969,  18390,  14268],
                 [   916,  14198,   1215,  14497],
                 [  2061,  14198,   2360,  14497],
                 [  5496,  14198,   5795,  14497],
                 [ 10076,  14198,  10375,  14497],
                 [ 13511,  14198,  13810,  14497],
                 [ 13740,  14198,  14039,  14497],
                 [ 15801,  14198,  16100,  14497],
                 [ 17862,  14198,  18161,  14497],
                 [ 18091,  14198,  18390,  14497],
                 [  4809,  14427,   5108,  14726],
                 [  9847,  14427,  10146,  14726],
                 [ 10076,  14427,  10375,  14726],
                 [ 13740,  14656,  14039,  14955],
                 [ 10076,  14885,  10375,  15184],
                 [ 10305,  14885,  10604,  15184],
                 [ 12595,  14885,  12894,  15184],
                 [ 13740,  14885,  14039,  15184],
                 [ 10305,  15114,  10604,  15413],
                 [ 13053,  15114,  13352,  15413],
                 [ 14427,  15114,  14726,  15413],
                 [ 13511,  15343,  13810,  15642],
                 [ 13969,  15343,  14268,  15642],
                 [ 16946,  15343,  17245,  15642],
                 [  4122,  15572,   4421,  15871],
                 [ 13511,  15572,  13810,  15871],
                 [ 13740,  15572,  14039,  15871],
                 [  2977,  15801,   3276,  16100],
                 [ 16030,  15801,  16329,  16100],
                 [ 17404,  15801,  17703,  16100],
                 [ 13282,  16030,  13581,  16329],
                 [  1603,  16259,   1902,  16558],
                 [  2290,  16259,   2589,  16558],
                 [  2519,  16259,   2818,  16558],
                 [  2977,  16488,   3276,  16787],
                 [  4580,  16488,   4879,  16787],
                 [ 15572,  16488,  15871,  16787],
                 [ 15801,  16488,  16100,  16787],
                 [ 14198,  16717,  14497,  17016],
                 [ 15572,  16717,  15871,  17016],
                 [ 13969,  16946,  14268,  17245],
                 [ 14656,  16946,  14955,  17245],
                 [  2061,  17175,   2360,  17474],
                 [  1374,  17633,   1673,  17932],
                 [   916,  17862,   1215,  18161],
                 [  3435,  17862,   3734,  18161],
                 [  1832,  18091,   2131,  18390],
                 [  3664,  19923,   3963,  20222],
                 [  3893,  19923,   4192,  20222],
                 [  1145,  20381,   1444,  20680],
                 [  1145,  20839,   1444,  21138],
                 [  1832,  21297,   2131,  21596],
                 [  1832,  21526,   2131,  21825],
                 [  2748,  22442,   3047,  22741],
                 [   458,  23129,    757,  23428],
                 [  5496,  24045,   5795,  24344],
                 [  6183,  24961,   6482,  25260],
                 [  4122,  25190,   4421,  25489],
                 [  5038,  25419,   5337,  25718],
                 [  5038,  25648,   5337,  25947],
                 [  5038,  25877,   5337,  26176],
                 [   687,  26335,    986,  26634],
                 [   916,  26335,   1215,  26634],
                 [  1145,  26335,   1444,  26634]])  
        
        
        
        
        
        
        
        no_overlap_boxes = non_max_suppression_fast(numpy.array(boxes), .1)
        inProj = Proj(init='epsg:32615')
        outProj = Proj(init='epsg:4326')  
        world = []   
        for box in no_overlap_boxes:
            point = get_box_center(box)
            point_world = pixel_to_world(point[0], point[1], geotransform)
            
            world.append(point_world)
            #print "[%s,%s]," % (point_world[0], point_world[1])
            #pretty_print(transform(inProj, outProj, point_world[0], point_world[1]))
      
        list_to_shape('test.shp', world)        
        #crop(filepath, 0, 0, 299, 299)
        
        print 'Command execution is done in %s seconds.' % (time.time() - start_time)